__kernel
void 
dcs(const __global float *pFunall,
                  __global float *pNll,
                  __global float *pGrad,
                  __local float *tempNll,
                  __constant float *pPa,
                  const int nWave)
{
  uint gid = get_global_id(0);
  uint lid = get_local_id(0);
  uint bid = get_group_id(0);
  uint lsize = get_local_size(0);
 
  float sum = 0;
  for(int i = 0; i < nWave; i++)
    {
      for(int j = 0; j < nWave; j++)
        {
          sum += pPa[i*nWave+j]*pFunall[gid*nWave*nWave+i*nWave+j];
        }
    }
  tempNll[lid] = log(sum);
  tempNll[lid+lsize] = sum;

  barrier(CLK_LOCAL_MEM_FENCE);

  if(lid == 0)
    {
      for(int i = 0; i < lsize; i++)
        {
          if(i == 0) pNll[bid] = 0.;
          pNll[bid] += tempNll[i];  
        }
    }

  if(lid == 1)
    {
      for(int i = 0; i < lsize; i++)
        {
          for(int j = 0; j < nWave; j++)
            {
              for(int k = 0; k < nWave; k++)
                {
                  int idx = j*nWave + k;
                  if(i == 0) pGrad[bid*nWave*nWave+idx] = 0;

                  pGrad[bid*nWave*nWave+idx] += pFunall[(bid*lsize+i)*nWave*nWave+idx]/tempNll[i+lsize];
                }
            }  
        }
    }
}

